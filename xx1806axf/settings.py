"""
Django settings for xx1806axf project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ob65v1z6@#bj9^=i=e)a5p8%zc7f-#81l4%k8(7)xwv&b911^5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*',]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'axfxx1806',
    'djcelery',
]

import djcelery
djcelery.setup_loader()
BROKER_URL='redis://localhost:6379/3'  #设置消息队列的url
CELERY_CONCURRENCY=2  #（设置worker的并发数量）
CELERY_RESULT_BACKEND = 'redis://localhost:6379/4'  #存放结果的地方

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'xx1806axf.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'xx1806axf.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "py1806",
        'PORT': 3306,
        "HOST": "10.31.153.11",
        "USER": 'wl',
        "PASSWORD": '123',

    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR,'static')]
MEDIA_ROOT = os.path.join(BASE_DIR,'static/uploads')

# # 设置验证用户
# AUTH_USER_MODEL = 'axfxx1806.MyUser'
# # 设置用户自定义设置
# AUTHENTICTION_BACKENDS = (
#     'axfxx1806.auth.MyBackend',
# )

# # django的缓存配置
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
#         'LOCATION': 'my_cache_table',
#         'TIMEOUT': '60',
#         'OPTIONS': {
#             'MAX_ENTRIES': '300',
#         },
#         'KEY_PREFIX': 'rock',
#         'VERSION': '1',
#     }
# }

# redis缓存
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    },
    "confirm": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/2",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# # 富文本
# TINYMCE_DEFAULT_CONFIG = {
#     'theme': 'advanced',
#     'width': 800,
#     'height': 600,
# }
# 邮件发送配置
EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.qq.com'  # 如果是 163 改成 smtp.163.com
EMAIL_PORT = 465   #SMPT的端口  不能改
EMAIL_HOST_USER = "1933972786@qq.com"   #账号  接收邮件的用户
EMAIL_HOST_PASSWORD = "ohzvurnaumlobiig"  #授权码  接收邮件的用户提供的授权码
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER  #默认邮件的发送人
# https://docs.djangoproject.com/zh-hans/2.0/topics/email/
VERIFY_CODE_MAX_AGE = 60 * 60  # 单位60s   #单位是秒

# # log  配置信息
# ADMINS = (
#     ('xx', '1933972786@qq.com'),
#     ('yy', 'alluolin@163.com'),
# )
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# SERVER_EMAIL = EMAIL_HOST_USER
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'standard': {
#             'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'
#         },
# 'easy': {  # 自己加
#         'format': '%(asctime)s|%(funcName)s|%(message)s'
#     },
#     },
#
#     'filters': {  #过滤条件
#         'require_debug_false': {
#             '()': 'django.utils.log.RequireDebugFalse',
#         },
#         'require_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue'
#         }
#     },
#     'handlers': {
#         # 'null': {
#         #     'level': 'DEBUG',
#         #     'class': 'logging.NullHandler',
#         # },
#         'mail_admins': {   #一旦线上代码报错误   邮件会提示
#             'level': 'ERROR',
#             'class': 'django.utils.log.AdminEmailHandler',
#             'filters': ['require_debug_false'],
#         },
#
#         'debug': {
#             'level': 'DEBUG',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': os.path.join(BASE_DIR, "log", 'debug.log'),  # 文件路径
#             'maxBytes': 1024 * 1024 * 5,  # 5兆数据
#             'backupCount': 5,  # 允许有5个备份
#             # 'formatter': 'standard',  #格式
#             'formatter': 'easy',
#         },
#         'console': {
#             'level': 'DEBUG',
#             'class': 'logging.StreamHandler',
#             'formatter': 'standard',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['console', 'debug'],
#             'level': 'DEBUG',
#             'propagate': False   #是否继承父类的log信息
#         },#对于不存在的 ALLWED_HOSTS  中的请求不会发送报错邮件
#         'django.request': {
#             'handlers': ['debug', 'mail_admins'],
#             'level': 'ERROR',
#             'propagate': True,  # 是否继承父类的log信息
#         },
#         # 对于不在 ALLOWED_HOSTS 中的请求不发送报错邮件
#         'django.security.DisallowedHost': {
#             'handlers': ['debug'],
#             'propagate': False,
#         },
#     }
# }


